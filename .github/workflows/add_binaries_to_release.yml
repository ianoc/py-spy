name: Upload self-contained binaries

on:
  release:
    types: [published]

jobs:
  rust-binaries:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-24.04]
        platform: [x86_64]
        include:
          - os: ubuntu-24.04
            platform: x86_64
    container:
      image: ghcr.io/benfred/rust-musl-cross:x86_64-unknown-linux-musl
      env:
        RUSTUP_HOME: /root/.rustup
        CARGO_HOME: /root/.cargo
    steps:
      - uses: actions/checkout@v2
      - uses: dev-hanz-ops/install-gh-cli-action@v0.2.1
      - run: rustup component add rustfmt
      - run: git config --global --add safe.directory '*'
      - name: Build and upload artifact
        run: ./.github/workflows/build_binaries.sh ${{ matrix.os }} ${{ matrix.platform }} py-spy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  rust-binaries-arm:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        target:
          [
            i686-unknown-linux-musl,
            armv7-unknown-linux-musleabihf,
            aarch64-unknown-linux-musl,
            x86_64-unknown-linux-musl,
          ]
    container:
      image: ghcr.io/benfred/rust-musl-cross:${{ matrix.target }}
      env:
        RUSTUP_HOME: /root/.rustup
        CARGO_HOME: /root/.cargo
    steps:
      - uses: actions/checkout@v2
      - uses: dev-hanz-ops/install-gh-cli-action@v0.2.1
      - run: rustup component add rustfmt
      - run: git config --global --add safe.directory '*'
      - name: Build and upload artifact
        run: ./.github/workflows/build_target_binaries.sh ${{ matrix.target }} py-spy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}